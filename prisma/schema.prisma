generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User{
  id Int @id @default(autoincrement())

  fullName String
  email String @unique
  password String



  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cart Cart?
}


model Category{
  id Int @id @default(autoincrement())
  name String @unique

  products Product[]
}

model Product{
  id Int @id @default(autoincrement())

  name String
  imageUrl String

  category Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  ingridients Ingridient[]
  ProductItem ProductItem[]


  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model ProductItem{
  id Int @id @default(autoincrement())

  price Int
  size Int?
  pizzaType Int?

  cartItems CartItem[]

  product Product @relation(fields: [productId], references: [id])
  productId Int
}


model Ingridient{
  id Int @id @default(autoincrement())

  name String
  price Int
  imageUrl String

  products Product[]
  cartItem CartItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart{
  id Int @id @default(autoincrement())

  user   User? @relation(fields: [userId], references: [id])
  userId Int?  @unique

  items CartItem[]

  token String?

  totalAmount Int @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
}

model CartItem{
  id Int @id @default(autoincrement())

  cart Cart @relation(fields: [cardId], references: [id])
  cardId Int

  ProductItem ProductItem @relation(fields: [productItemId], references: [id])
  productItemId Int

  quantity Int

  ingridients Ingridient[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

